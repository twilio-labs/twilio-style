#!/bin/bash

## Publish Script
## Cleans up the node_modules, re-installs everything, runs test before publishing
## By default, it will attempt to publish as next-gen, unless 'public' is provided
## i.e.
##    ./bin/publish public      publishes as a bump
##    ./bin/publish             publishes as next-gen

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
LERNA="$DIR/../node_modules/.bin/lerna"

# Runs script but quits if script exists with non-zero exit code
function run_script() {
  eval "$@"
  if [ $? -eq 1 ] ; then
    echo "Script '$@' failed - exiting"
    exit $?
  fi
}

# Show notification and a countdown before publihsing
secs=5
while [ $secs -gt 0 ]; do
  tag="beta (next)"
  if [ "$1" == "public" ] ; then
    tag="public"
  fi
  echo -ne "Publishing as a \033[1m${tag}\033[0m release in ${secs}sec\033[0K\r"
  sleep 1
  : $((secs--))
done
echo -ne "Publishing as a \033[1m${tag}\033[0m release\033[0K\r"
echo -ne "\r\n"

# Cleanup
run_script $LERNA clean -y
run_script $LERNA run clean
run_script rm -rf node_modules

# Install
run_script npm install

# Test
run_script npm run test

# Publish
if [ "$1" == "public" ] ; then
  echo -e "\n------------------------------------"
  echo "-- Publishing as a public release --"
  echo -e "------------------------------------\n"
  run_script $LERNA publish
else
  echo -e "\n-----------------------------------------"
  echo "-- Publishing as a beta (next) release --"
  echo -e "-----------------------------------------\n"
  run_script $LERNA publish --dist-tag next
fi